<?xml version = "1.0" encoding = "UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation ="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
     ">
<!-- Scan the JavaConfig -->
    <context:annotation-config/>
    <context:component-scan base-package="com.dipen"/>

    <!-- Using Drivermanger opens connection every time it is called so it is not efficient
          It doesn't implement connection pooling
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
        <property name="url" value="jdbc:derby://localhost:1527/db;create=true" />
    </bean>
    -->
    <!-- Using library that uses connection polling which is effiecient -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
        <property name="url" value="jdbc:derby://localhost:1527/db;create=true" />
        <property name="initialSize" value="2" />
        <property name="maxActive" value="5"/>
    </bean>

    <bean id="circleSimpleJdbcTemplateDaoImpl" class="com.dipen.simplejdbctemplatedao.CircleSimpleJdbcTemplateDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>